{
  "Basic Template Snippet": {
    "prefix": "!!template",
    "body": [
        "#include <bits/stdc++.h>",
        "#include <ext/pb_ds/assoc_container.hpp>",
        "#include <ext/pb_ds/tree_policy.hpp>",
        "using namespace std;",
        "using namespace __gnu_pbds;",
        "",
        "",
        "#define nl \"\\n\"",
        "#define fastio() ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);",
        "",
        "//#define cerr if(0)cerr //quickly remove debug statements",
        "",
        "#define ff first",
        "#define ss second",
        "#define pb push_back",
        "#define mp make_pair",
        "#define FOR(a, b, c) for(int(a) = (b); (a) < (c); ++(a))",
        "#define REP(i,n) FOR(i,0,n)",
        "#define scan(arr,n) REP(scan_idx,n)cin>>arr[scan_idx];",
        "#define inp(n,v) int n;cin>>n;vi v(n);scan(v,n)",
        "#define setbits(x) __builtin_popcountll(x)",
        "#define all(v) v.begin(),v.end()",
        "#define rall(v) v.rbegin(),v.rend()",
        "#define present(ab,cd) ((ab).find((cd)) != (ab).end())",
        "#define acc accumulate",
        "#define tr(container, it) for(auto it = container.begin(); it != container.end(); it++)",
        "#define watch(x) cerr << (#x) << \" is \" << (x) << nl",
        "#define watchv(v) FOR(i,0,v.size())cerr<<v[i]<<\" \";cerr<<nl",
        "#define watcha(v) FOR(i,0,sizeof(a)/sizeof(a[0]))cerr<<v[i]<<\" \";cerr<<nl",
        "#define YES(); {cout<<\"YES\\n\";return;}",
        "#define Yes(); {cout<<\"Yes\\n\";return;}",
        "#define yes(); {cout<<\"yes\\n\";return;}",
        "#define NO(); {cout<<\"NO\\n\";return;}",
        "#define no(); {cout<<\"no\\n\";return;}",
        "#define No(); {cout<<\"No\\n\";return;}",
        "",
        "using ulli = unsigned long long int;",
        "using ll = long long;",
        "using lld = long double;",
        "",
        "typedef vector<int> vi;",
        "typedef vector<ll> vl;",
        "typedef vector<double> vd;",
        "typedef vector<string> vs;",
        "typedef pair<int, int> pii;",
        "typedef pair<ll, ll> pll;",
        "typedef vector<vi> vvi;",
        "typedef vector<vl> vvl;",
        "typedef vector<pii> vpii;",
        "typedef vector<pll> vpll;",
        "typedef pair<string, string> pss; ",
        "typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> i_set;//indexed_set",
        "//member functions :",
        "//1. order_of_key(k) : number of elements strictly lesser than k",
        "//2. find_by_order(k) : k-th element in the set",
        "",
        "lld pi = 3.1415926535897932;",
        "ll MOD = (1000)*(1000)*(1000) + 7;",
        "",
        "",
        "void testcase(){",
        "",
        "}",
        "",
        "int32_t main() {",
        "    fastio();",
        "    int t=1;",
        "    cin>>t;",
        "    while(t--){",
        "        testcase();",
        "    } ",
        "    cerr << \"\\nTime elapsed : \" << 1000 * clock() / CLOCKS_PER_SEC << \" ms\\n\";",
        "}",
    ],
    "description": "template files for cpp"
  },
  "Tips": {
    "prefix": "!!tips",
    "body": [
        "/*",
        "    Coded by : Dip Turkar",
        "    ",
        "    {TIPS WHILE STARTING}",
        "    --check if you have to input t or not",
        "    --check for long long overflows",
        "    --figure out logic first, then start writing pls!!!!!!!",
        "    --using a set? check for PBDS!!!",
        "    --modulo of negative numbers is not a%b, it is a%b + abs(b)!!!!!!!",
        "*/",
    ],
    "description": "Tips while starting"
  },
  "Sieve": {
        "prefix":"!!seive",
        "body": [
            "bool prime[1000001];",
            "void primesTable(){",
            "    memset(prime, true, sizeof(prime));",
            "    for (int p = 2; p * p <= 1000001; p++){",
            "        if (prime[p] == true){",
            "            for (int i = p * p; i <= 1000001; i += p)",
            "                prime[i] = false;",
            "        }",
            "    }",
            "}"
        ],
        "description": "seive implementation"
    },
    "GCD" : {
        "prefix": "!!gcd",
        "body": [
            "ll gcd(ll a, ll b){",
            "    if (!b)",
            "        return a;",
            "    return gcd(b, a % b);",
            "}",
        ]
    },
    "LCM" : {
        "prefix": "!!lcm",
        "body": [
            "//lcm",
            "ll lcm(ll a, ll b) { return (a * b) / gcd(a, b); }",
            "// Function to compute num (mod a)",
        ]
    },
    "MOD string" : {
        "prefix": "!!mod-string",
        "body": [
            "ll mod_string(string num, ll a)",
            "{",
            "    // Initialize result",
            "    ll res = 0;",
            "",
            "    // One by one process all digits of 'num'",
            "    for (int i = 0; i < num.length(); i++)",
            "        res = (res*10 + (ll)num[i] - '0') %a;",
            "",
            "    return res;",
            "}",
        ]
    },
    "Power" : {
        "prefix": "!!power",
        "body": [
            "ll power(ll x, ll y, ll p){",
            "    ll res = 1;",
            "    x %= p;",
            "    while (y > 0){",
            "        if (y & 1)",
            "            res = (res * x) % p;",
            "        y = y >> 1;",
            "        x = (x * x) % p;",
            "    }",
            "    return res;",
            "}",
        ]
    },   
    "hash-pair" : {
        "prefix": "!!hash-pair",
        "body": [
            "struct hash_pair{ ",
            "    template <class T1, class T2> ",
            "    size_t operator()(const pair<T1, T2>& p) const{ ",
            "        auto hash1 = hash<T1>{}(p.first); ",
            "        auto hash2 = hash<T2>{}(p.second); ",
            "        return hash1 ^ hash2; ",
            "    } ",
            "};",
        ]
    },   
}
